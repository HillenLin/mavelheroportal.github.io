{"version":3,"sources":["webpack:///./src/app/character/character-detail/character-detail.component.css","webpack:///./src/app/character/character-detail/character-detail.component.html","webpack:///./src/app/character/character-detail/character-detail.component.ts","webpack:///./src/app/character/character.module.ts","webpack:///./src/app/characters/all-characters/all-characters.component.css","webpack:///./src/app/characters/all-characters/all-characters.component.html","webpack:///./src/app/characters/all-characters/all-characters.component.ts","webpack:///./src/app/characters/characters-routing.module.ts","webpack:///./src/app/characters/characters.module.ts"],"names":[],"mappings":"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","file":"characters-characters-module.js","sourcesContent":["module.exports = \".col-sm-6 img {\\n    width: 100%;\\n}\\n.char-header {\\n    margin: 0 0 24px;\\n    font-size: 34px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2hhcmFjdGVyL2NoYXJhY3Rlci1kZXRhaWwvY2hhcmFjdGVyLWRldGFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztBQUNmO0FBQ0E7SUFDSSxnQkFBZ0I7SUFDaEIsZUFBZTtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2NoYXJhY3Rlci9jaGFyYWN0ZXItZGV0YWlsL2NoYXJhY3Rlci1kZXRhaWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb2wtc20tNiBpbWcge1xuICAgIHdpZHRoOiAxMDAlO1xufVxuLmNoYXItaGVhZGVyIHtcbiAgICBtYXJnaW46IDAgMCAyNHB4O1xuICAgIGZvbnQtc2l6ZTogMzRweDtcbn0iXX0= */\"","module.exports = \"<ng-container *ngIf=\\\"hasDetailsLoaded\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-6\\\">\\n        <img src=\\\"{{charDetailObj?.thumbnail?.path+'.'+charDetailObj?.thumbnail?.extension}}\\\"\\n          alt=\\\"Photo of the charDetailObj\\\">\\n      </div>\\n      <div class=\\\"col-sm-6 infor-wrapper\\\">\\n        <div class=\\\"char-header\\\">{{charDetailObj?.name}}</div>\\n        <ng-container *ngIf=\\\"charDetailObj?.description; then showDescription; else showSkelton\\\">\\n        </ng-container>\\n        <ng-template #showDescription>\\n          <p>{{charDetailObj?.description}}</p>\\n        </ng-template>\\n        <ng-template #showSkelton>\\n          <div class=\\\"warning\\\">\\n            This charDetailObj doesn't want to show personal information to public.\\n          </div>\\n        </ng-template>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <mat-tab-group>\\n        <mat-tab label=\\\"Comics they’ve appeared in\\\">\\n          <mat-list role=\\\"list\\\">\\n            <ng-container *ngFor=\\\"let comic of comics\\\">\\n              <mat-list-item role=\\\"listitem\\\">{{comic.name}}</mat-list-item>\\n              <mat-divider></mat-divider>\\n            </ng-container>\\n          </mat-list>\\n        </mat-tab>\\n        <mat-tab label=\\\"series they’ve appeared in\\\">\\n            <mat-list role=\\\"list\\\">\\n                <ng-container *ngFor=\\\"let serie of series\\\">\\n                    <mat-list-item role=\\\"listitem\\\">{{serie.name}}</mat-list-item>\\n                    <mat-divider></mat-divider>\\n                  </ng-container>\\n            </mat-list>\\n        </mat-tab>\\n        <mat-tab label=\\\"stories they’ve appeared in\\\">\\n            <mat-list role=\\\"list\\\">\\n                <ng-container *ngFor=\\\"let story of stories\\\">\\n                    <mat-list-item role=\\\"listitem\\\">{{story.name}}</mat-list-item>\\n                    <mat-divider></mat-divider>\\n                  </ng-container>\\n            </mat-list>\\n\\n        </mat-tab>\\n      </mat-tab-group>\\n    </div>\\n  </div>\\n</ng-container>\\n\\n<!-- BEGIN: Showing shared skeleton component when the data is not returned from backend API -->\\n<ng-container *ngIf=\\\"!hasDetailsLoaded\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <app-skeleton-screen></app-skeleton-screen>\\n        </div>\\n    </div>\\n</ng-container>\\n<!-- END: Showing shared skeleton component when the data is not returned from backend API -->\\n\\n    \\n\"","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { HttpService } from 'src/app/services/http.service';\n\n@Component({\n    selector: 'app-character-detail',\n    templateUrl: './character-detail.component.html',\n    styleUrls: ['./character-detail.component.css']\n})\nexport class CharacterDetailComponent implements OnInit, OnDestroy {\n\n    subscriptionActiveRouter$: Subscription;\n    httpGetCharDetailsService$: Subscription;\n    id: number;\n    hasDetailsLoaded: boolean = false;\n\n    // TODO: define its data model\n    charDetailObj: any;\n    comics: any;\n    series: any;\n    stories: any;\n\n    constructor(\n        private activeRouter: ActivatedRoute,\n        private httpService: HttpService,\n    ) { }\n\n    ngOnInit() {\n        /*subscript to watch the route para changes. \n        **************Please make changes inside this subscription. Don't delete it ***************/\n        this.subscriptionActiveRouter$ = this.activeRouter.params.subscribe(params => {\n            this.id = +params['id']; // (+) converts string 'id' to a number\n            this.httpGetCharDetailsService$ = this.httpService.getCharDetails(this.id).subscribe(\n                (res) => {\n                    console.log(res.data.results[0]);\n                    this.charDetailObj = res.data.results[0];\n                    this.comics = this.charDetailObj.comics.items;\n                    this.series = this.charDetailObj.series.items;\n                    this.stories = this.charDetailObj.stories.items;\n                    this.hasDetailsLoaded = true;\n                },\n                error => console.log(\"Error: \", error), \n                () => {\n                });\n\n        });\n    }\n\n    ngOnDestroy() {\n        if(this.subscriptionActiveRouter$) {\n            this.subscriptionActiveRouter$.unsubscribe();\n        }\n        if(this.httpGetCharDetailsService$) {\n            this.httpGetCharDetailsService$.unsubscribe();\n        }\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CharacterDetailComponent } from './character-detail/character-detail.component';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [CharacterDetailComponent],\n  imports: [\n    CommonModule,\n    SharedModule\n  ]\n})\nexport class CharacterModule { }\n","module.exports = \".hero-card {\\n  max-width: 400px;\\n}\\n\\n\\n.example-header-image {\\n  background-size: cover;\\n}\\n\\n\\n.col-sm-4 {\\n    padding-top: 15px;\\n    padding-bottom: 15px;\\n}\\n\\n\\n*, :after, :before {\\n    box-sizing: border-box;\\n}\\n\\n\\n.warning    {\\n    color: #f44336;\\n}\\n\\n\\n.search-field {\\n    width: 100%;\\n    max-width: 576px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2hhcmFjdGVycy9hbGwtY2hhcmFjdGVycy9hbGwtY2hhcmFjdGVycy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0FBQ2xCOzs7QUFHQTtFQUNFLHNCQUFzQjtBQUN4Qjs7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsb0JBQW9CO0FBQ3hCOzs7QUFFQTtJQUNJLHNCQUFzQjtBQUMxQjs7O0FBRUE7SUFDSSxjQUFjO0FBQ2xCOzs7QUFFQTtJQUNJLFdBQVc7SUFDWCxnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9jaGFyYWN0ZXJzL2FsbC1jaGFyYWN0ZXJzL2FsbC1jaGFyYWN0ZXJzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGVyby1jYXJkIHtcbiAgbWF4LXdpZHRoOiA0MDBweDtcbn1cblxuXG4uZXhhbXBsZS1oZWFkZXItaW1hZ2Uge1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xufVxuXG4uY29sLXNtLTQge1xuICAgIHBhZGRpbmctdG9wOiAxNXB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAxNXB4O1xufVxuXG4qLCA6YWZ0ZXIsIDpiZWZvcmUge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbi53YXJuaW5nICAgIHtcbiAgICBjb2xvcjogI2Y0NDMzNjtcbn1cblxuLnNlYXJjaC1maWVsZCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiA1NzZweDtcbn0iXX0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <!-- BEGIN: Name Filters Section-->\\n    <div class=\\\"col-12 center\\\">\\n      <h2>Filter Data by Character Name</h2>\\n      <P>The below box filters out the names being displayed.</P>\\n      <form #form=\\\"ngForm\\\" name=\\\"form\\\" novalidate>\\n        <input type=\\\"text\\\" class=\\\"search-field\\\" name=\\\"group2\\\" #group2=\\\"ngModel\\\" placeholder=\\\"Search\\\"\\n          [(ngModel)]=\\\"nameFilter\\\" #group2=\\\"ngModel\\\">\\n      </form>\\n    </div>\\n    <!-- END: Name Filters Section-->\\n  </div>\\n  <div class=\\\"row\\\">\\n    <!-- BEGIN: Showing shared skeleton component when the data is not returned from backend API -->\\n    <ng-container *ngIf=\\\"!showChar\\\">\\n      <div *ngFor=\\\"let skeleton of skeletonRepeatTime; let i = index\\\" class=\\\"col-sm-4\\\">\\n        <app-skeleton-screen></app-skeleton-screen>\\n      </div>\\n    </ng-container>\\n    <!-- END: Showing shared skeleton component when the data is not returned from backend API -->\\n\\n    <ng-container *ngIf=\\\"(allCharactersEndPoint | SearchFilter: nameFilter)?.length === 0\\\">\\n        <div class=\\\"col-12\\\"><p class=\\\"warning\\\">No matched result</p></div>\\n    </ng-container>\\n\\n    <!-- BEGIN: Showing list of characters when the data is returned from backend API -->\\n    <ng-container *ngIf=\\\"showChar\\\">\\n      <ng-container *ngFor=\\\"let character of allCharactersEndPoint  | SearchFilter: nameFilter; let i = index\\\">\\n        <div class=\\\"col-sm-4\\\">\\n          <mat-card class=\\\"hero-card hover-wrapper\\\">\\n            <mat-card-header>\\n              <mat-card-title>{{character?.name}}</mat-card-title>\\n            </mat-card-header>\\n            <div class=\\\"img-wrapper\\\">\\n              <a [routerLink]=\\\"['character/', character.id]\\\">\\n                <img mat-card-image src=\\\"{{character?.thumbnail?.path+'.'+character?.thumbnail?.extension}}\\\"\\n                  alt=\\\"Photo of the character\\\">\\n              </a>\\n            </div>\\n            <mat-card-actions>\\n              <button mat-button (click)=\\\"goToCharDetails(character?.id)\\\">View Details</button>\\n            </mat-card-actions>\\n          </mat-card>\\n        </div>\\n      </ng-container>\\n    </ng-container>\\n    <!-- END: Showing list of characters when the data is returned from backend API -->\\n\\n  </div>\\n</div>\\n\"","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { select, Store } from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { HttpService } from 'src/app/services/http.service';\nimport { LoadCharacters } from 'src/app/store/actions/characters.actions';\n\n@Component({\n    selector: 'app-all-characters',\n    templateUrl: './all-characters.component.html',\n    styleUrls: ['./all-characters.component.css']\n})\nexport class AllCharactersComponent implements OnInit, OnDestroy {\n    subStore$: Subscription\n    allCharactersEndPoint: [];\n    showChar: boolean = false;\n    skeletonRepeatTime: number[];\n\n    allCharacters$: Observable<any>;\n    nameFilter: string;\n\n    constructor(\n        public router: Router,\n        private store: Store<any>\n    ) { }\n\n    ngOnInit() {  \n        this.allCharacters$ = this.store.pipe(\n            select(state => state.characters)\n        );\n\n        this.subStore$ = this.allCharacters$.subscribe(response => {\n            console.log(response);\n            if(response['rawJSON']) {\n                // console.log('get the data from store');\n                // console.log(response['rawJSON']);\n                this.allCharactersEndPoint = response['rawJSON'];\n                this.showChar = true;\n            }\n        },\n            (error: any) => { console.error(error) });\n\n        this.skeletonRepeatTime = Array(20).fill(20).map((x, i) => i);\n    }\n\n    ngOnDestroy() {\n        if(this.subStore$) {\n            this.subStore$.unsubscribe();\n        }\n    }\n\n    goToCharDetails(charId) {\n        this.router.navigateByUrl(`/characters/character/${charId}`);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CharacterDetailComponent } from '../character/character-detail/character-detail.component';\nimport { AllCharactersComponent } from './all-characters/all-characters.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AllCharactersComponent,\n  },\n  {\n    path: 'character/:id',\n    component: CharacterDetailComponent,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CharactersRoutingModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CharactersRoutingModule } from './characters-routing.module';\nimport { CharacterModule } from '../character/character.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { AllCharactersComponent } from './all-characters/all-characters.component';\n\n\n@NgModule({\n  declarations: [AllCharactersComponent],\n  imports: [\n    CommonModule,\n    CharactersRoutingModule,\n    CharacterModule,\n    SharedModule\n  ]\n})\nexport class CharactersModule { }\n"],"sourceRoot":""}